FILE: noBoundSmartcastAfterContinue.kt
    public abstract interface A : R|kotlin/Any| {
        public abstract val s: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    public final fun test(list: R|kotlin/collections/List<A>|): R|kotlin/Unit| {
        lvar goodA: R|A?| = Null(null)
        lval <range>: R|kotlin/collections/List<A>| = R|<local>/list|
        lval <iterator>: R|kotlin/collections/Iterator<A>| = R|<local>/<range>|.R|FakeOverride<kotlin/collections/List.iterator: R|kotlin/collections/Iterator<A>|>|()
        while(R|<local>/<iterator>|.R|kotlin/collections/Iterator.hasNext|()) {
            lval a: R|A| = R|<local>/<iterator>|.R|FakeOverride<kotlin/collections/Iterator.next: R|A|>|()
            when () {
                ==(R|<local>/goodA|, Null(null)) ->  {
                    R|<local>/goodA| = R|<local>/a|
                    continue@@@[R|<local>/<iterator>|.R|kotlin/collections/Iterator.hasNext|()]
                }
            }

            R|<local>/goodA|.<Inapplicable(WRONG_RECEIVER): [/A.s]>#
        }

    }
